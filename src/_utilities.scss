@use "sass:map";

// TODO: Move each utils to its own file

$sizing: (
  "height": (
    properties: height,
    selector: h,
    values: $dimension-values,
  ),
  "min-height": (
    properties: min-height,
    selector: min-h,
    values: $dimension-values,
  ),
  "max-height": (
    properties: max-height,
    selector: max-h,
    values: $dimension-values,
  ),
  "width": (
    properties: width,
    selector: w,
    values: $dimension-values,
  ),
  "min-width": (
    properties: min-width,
    selector: min-w,
    values: $dimension-values,
  ),
  "max-width": (
    properties: max-width,
    selector: max-w,
    values: $dimension-values,
  ),
  "sizes": (
    properties: width height,
    selector: size,
    values: $spacers,
  ),
);
$displays: (
  "display": (
    properties: display,
    selector: null,
    values: $display-values,
  ),
);
$grid: (
  "grid-template-columns": (
    properties: grid-template-columns,
    selector: grid-cols,
    values: $grid-template-columns-values,
  ),
  "grid-column": (
    properties: grid-column,
    selector: col,
    values: (
      auto: auto,
      span-1: span 1 / span 1,
      span-2: span 2 / span 2,
      span-3: span 3 / span 3,
      span-4: span 4 / span 4,
      span-5: span 5 / span 5,
      span-6: span 6 / span 6,
      span-7: span 7 / span 7,
      span-8: span 8 / span 8,
      span-9: span 9 / span 9,
      span-10: span 10 / span 10,
      span-11: span 11 / span 11,
      span-12: span 12 / span 12,
      span-full: 1 / -1,
    ),
  ),
  "grid-column-start": (
    properties: grid-column-start,
    selector: col-start,
    values: (
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      10: 10,
      11: 11,
      12: 12,
      13: 13,
      auto: auto,
    ),
  ),
  "grid-column-end": (
    properties: grid-column-end,
    selector: col-end,
    values: (
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      10: 10,
      11: 11,
      12: 12,
      13: 13,
      auto: auto,
    ),
  ),
  "grid-template-rows": (
    properties: grid-template-rows,
    selector: grid-rows,
    values: $grid-template-rows-values,
  ),
  "grid-row": (
    properties: grid-row,
    selector: row,
    values: (
      auto: auto,
      span-1: span 1 / span 1,
      span-2: span 2 / span 2,
      span-3: span 3 / span 3,
      span-4: span 4 / span 4,
      span-5: span 5 / span 5,
      span-6: span 6 / span 6,
      span-full: 1 / -1,
    ),
  ),
  "grid-row-start": (
    properties: grid-row-start,
    selector: row-start,
    values: (
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      auto: auto,
    ),
  ),
  "grid-row-end": (
    properties: grid-row-end,
    selector: row-end,
    values: (
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      auto: auto,
    ),
  ),
  "grid-auto-flow": (
    properties: grid-auto-flow,
    selector: grid-flow,
    values: $grid-auto-flow-values,
  ),
  "grid-auto-columns": (
    properties: grid-auto-columns,
    selector: auto-cols,
    values: $grid-auto-columns-values,
  ),
  "grid-auto-rows": (
    properties: grid-auto-rows,
    selector: auto-rows,
    values: $grid-auto-rows-values,
  ),
);
$flex: (
  "flex": (
    properties: flex,
    selector: flex,
    values: $flex-values,
  ),
  "flex-direction": (
    properties: flex-direction,
    selector: flex,
    values: $direction-values,
  ),
  "flex-grow": (
    properties: flex-grow,
    selector: grow,
    values: $binary-values,
  ),
  "flex-shrink": (
    properties: flex-shrink,
    selector: shrink,
    values: $binary-values,
  ),
  "flex-wrap": (
    properties: flex-wrap,
    selector: flex,
    values: $wrap-values,
  ),
  "justify-content": (
    properties: justify-content,
    selector: justify,
    values: $justify-values,
  ),
  "align-items": (
    properties: align-items,
    selector: items,
    values: $align-items-values,
  ),
  "align-content": (
    properties: align-content,
    selector: content,
    values: $align-content-values,
  ),
  "align-self": (
    properties: align-self,
    selector: self,
    values: $align-self-values,
  ),
);
$gap: (
  "gap": (
    properties: gap,
    selector: gap,
    values: $spacers,
  ),
  "row-gap": (
    properties: row-gap,
    selector: gap-y,
    values: $spacers,
  ),
  "column-gap": (
    properties: column-gap,
    selector: gap-x,
    values: $spacers,
  ),
);
$border-radius: (
  "border-radius": (
    properties: border-radius,
    selector: rounded,
    values: $radius-values,
  ),
  "border-top-left-radius": (
    properties: border-top-left-radius,
    selector: rounded-tl,
    values: $radius-values,
  ),
  "border-top-right-radius": (
    properties: border-top-right-radius,
    selector: rounded-tr,
    values: $radius-values,
  ),
  "border-bottom-left-radius": (
    properties: border-bottom-left-radius,
    selector: rounded-bl,
    values: $radius-values,
  ),
  "border-bottom-right-radius": (
    properties: border-bottom-right-radius,
    selector: rounded-br,
    values: $radius-values,
  ),
  "border-top-radius": (
    properties: border-top-left-radius border-top-right-radius,
    selector: rounded-t,
    values: $radius-values,
  ),
  "border-bottom-radius": (
    properties: border-bottom-left-radius border-bottom-right-radius,
    selector: rounded-b,
    values: $radius-values,
  ),
  "border-left-radius": (
    properties: border-top-left-radius border-bottom-left-radius,
    selector: rounded-l,
    values: $radius-values,
  ),
  "border-right-radius": (
    properties: border-top-right-radius border-bottom-right-radius,
    selector: rounded-r,
    values: $radius-values,
  ),
);
$borders: (
  "border": (
    properties: border-width,
    selector: border,
    values: $border-values,
  ),
  "border-y": (
    properties: border-top-width border-bottom-width,
    selector: border-y,
    values: $border-values,
  ),
  "border-x": (
    properties: border-right-width border-left-width,
    selector: border-x,
    values: $border-values,
  ),
  "border-t": (
    properties: border-top-width,
    selector: border-t,
    values: $border-values,
  ),
  "border-e": (
    properties: border-right-width,
    selector: border-e,
    values: $border-values,
  ),
  "border-b": (
    properties: border-bottom-width,
    selector: border-b,
    values: $border-values,
  ),
  "border-s": (
    properties: border-left-width,
    selector: border-s,
    values: $border-values,
  ),
  "border-style": (
    properties: border-style,
    selector: border,
    values: $border-style-values,
  ),
);
$paddings: (
  "padding": (
    properties: padding,
    selector: p,
    values: $spacers,
  ),
  "padding-x": (
    properties: padding-left padding-right,
    selector: px,
    values: $spacers,
  ),
  "padding-y": (
    properties: padding-top padding-bottom,
    selector: py,
    values: $spacers,
  ),
  "padding-top": (
    properties: padding-top,
    selector: pt,
    values: $spacers,
  ),
  "padding-end": (
    properties: padding-right,
    selector: pe,
    values: $spacers,
  ),
  "padding-bottom": (
    properties: padding-bottom,
    selector: pb,
    values: $spacers,
  ),
  "padding-start": (
    properties: padding-left,
    selector: ps,
    values: $spacers,
  ),
);
$margins: (
  "margin": (
    properties: margin,
    selector: m,
    values: $spacers-with-auto,
  ),
  "margin-x": (
    properties: margin-left margin-right,
    selector: mx,
    values: $spacers-with-auto,
  ),
  "margin-y": (
    properties: margin-top margin-bottom,
    selector: my,
    values: $spacers-with-auto,
  ),
  "margin-top": (
    properties: margin-top,
    selector: mt,
    values: $spacers-with-auto,
  ),
  "margin-end": (
    properties: margin-right,
    selector: me,
    values: $spacers-with-auto,
  ),
  "margin-bottom": (
    properties: margin-bottom,
    selector: mb,
    values: $spacers-with-auto,
  ),
  "margin-start": (
    properties: margin-left,
    selector: ms,
    values: $spacers-with-auto,
  ),
);
$text: (
  "font-style": (
    properties: font-style,
    selector: text,
    values: (
      normal: normal,
      italic: italic,
      oblique: oblique,
    ),
  ),
  "font-weight": (
    properties: font-weight,
    selector: font,
    values: (
      light: 300,
      normal: 400,
      bold: 500,
      bolder: 700,
      extrabold: 800,
    ),
  ),
  "text-decoration": (
    properties: text-decoration,
    selector: text,
    values: (
      underline: underline,
      overline: overline,
      line-through: line-through,
    ),
  ),
  "text-align": (
    properties: text-align,
    selector: text,
    values: (
      left: left,
      right: right,
      center: center,
      justify: justify,
      pretty: pretty,
    ),
  ),
  "text-transform": (
    properties: text-transform,
    selector: text,
    values: (
      capitalize: capitalize,
      uppercase: uppercase,
      lowercase: lowercase,
    ),
  ),
);
$shadow: (
  "box-shadow": (
    properties: box-shadow,
    selector: shadow,
    values: (
      none: none,
      xs: 0 1px 2px rgba(#{use-css-variable(shadow-color)}, 0.15),
      sm: 0 2px 4px rgba(#{use-css-variable(shadow-color)}, 0.18),
      md: 0 4px 8px rgba(#{use-css-variable(shadow-color)}, 0.2),
      lg: 0 8px 16px rgba(#{use-css-variable(shadow-color)}, 0.25),
      xl: 0 12px 24px rgba(#{use-css-variable(shadow-color)}, 0.3),
      xxl: 0 20px 40px rgba(#{use-css-variable(shadow-color)}, 0.35),
      inner: inset 0 2px 4px rgba(#{use-css-variable(shadow-color)}, 0.15),
      focus: 0 0 0 4px rgba($primary, 0.4),
    ),
  ),
);
$position: (
  "position": (
    properties: position,
    selector: null,
    values: (
      static: static,
      relative: relative,
      absolute: absolute,
      fixed: fixed,
      sticky: sticky,
    ),
  ),
  "top": (
    properties: top,
    selector: top,
    values: $spacers-with-auto,
  ),
  "right": (
    properties: right,
    selector: right,
    values: $spacers-with-auto,
  ),
  "bottom": (
    properties: bottom,
    selector: bottom,
    values: $spacers-with-auto,
  ),
  "left": (
    properties: left,
    selector: left,
    values: $spacers-with-auto,
  ),
);
$z-index: (
  "z-index": (
    properties: z-index,
    selector: z,
    values: $z-indexes,
  ),
);
$utilities: () !default;
$utilities: map-merge-multiple(
  $sizing,
  $displays,
  $flex,
  $gap,
  $border-radius,
  $borders,
  $paddings,
  $margins,
  $grid,
  $utilities,
  $text,
  $shadow,
  $position,
  $z-index
);
