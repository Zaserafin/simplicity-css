// Form controls
// TODO: Move all the variables to css :root variables
// =================================================

select,
textarea,
input:not([type]),
input[type="color"],
input[type="date"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="url"],
input[type="week"] {
  appearance: #{$control-appearance};
  background-color: #{$control-bg};
  font-family: inherit;
  font-size: #{$control-font-size};
  color: inherit;
  border: #{$control-border-width} solid #{$control-border-color};
  border-radius: #{$control-border-radius};
  outline: 0;
  box-sizing: inherit;
  width: #{$control-width};
  padding: #{$control-padding};
  margin: #{$control-margin};
  letter-spacing: 1px !important;

  &::placeholder {
    color: #{use-css-variable(secondary)};
  }

  &:focus {
    border-color: #{$control-focus-color};
    box-shadow: #{$control-focus-shadow};
  }

  &.invalid {
    border-color: #{use-css-variable(danger)};
  }

  &.valid {
    border-color: #{use-css-variable(success)};
  }

  &:has(+ .error) {
    margin-bottom: 0;
  }
}

.error {
  display: block;
  margin-bottom: 2rem;
  margin-left: 1.6rem;
  color: #{use-css-variable(danger)};
  font-weight: bolder;
}

input[type="color"] {
  width: #{$color-width};
  padding: 0 #{$color-padding} !important;
}

input[type="range"] {
  width: 100%;
  height: 1.2rem;
  padding: 0;
  appearance: none;
  outline: none;
  background-color: #{$control-bg};
  border: #{$control-border-width} solid #{$control-border-color};
  border-radius: #{$control-border-radius};

  &::-webkit-slider-thumb {
    appearance: none;
    appearance: none;
    width: 2rem;
    height: 2rem;
    background: #{use-css-variable(primary)} !important;
    cursor: pointer;
    border-radius: #{$border-radius-infinite};
  }

  &::-moz-range-thumb {
    width: 2rem;
    height: 2rem;
    background: var(--primary) !important;
    cursor: pointer;
    border-radius: #{$border-radius-infinite};
  }
}

select {
  background: #{$select-indicator} center right no-repeat;
  padding-right: #{$select-padding-right};

  &[multiple] {
    background: none;
    height: auto;
  }
}

textarea {
  min-height: #{$textarea-min-height};
  max-height: #{$textarea-max-height};
  resize: #{$textarea-resize} !important;
}

.label,
label,
legend {
  display: block;
  font-size: #{$label-font-size};
  font-weight: #{$label-font-weight};
  margin-bottom: #{$label-margin};

  &.inline {
    display: inline-block !important;
    font-weight: normal;
    margin-left: #{$label-margin};
  }
}

fieldset {
  border-width: #{$fieldset-border-width};
  padding: #{$fieldset-padding};
  margin: #{$fieldset-margin};
}

input[type="checkbox"],
input[type="radio"] {
  display: inline-block;
  width: #{$checkbox-size};
  height: #{$checkbox-size};
  margin: auto 0;
}

.floating-label {
  position: relative;
  margin: 0;
  padding: 0;

  label {
    position: absolute;
    top: 1rem;
    left: 1.6rem;
    transition: top 200ms ease, font-size 200ms ease;
  }

  input::placeholder {
    color: transparent;
  }

  @if $floating-show-placeholder == true {
    &:has(input:focus) {
      input::placeholder {
        color: #{use-css-variable(secondary)};
      }
    }
  }

  &:has(input:focus) label,
  &:has(input:not(:placeholder-shown)) label {
    font-size: 1.4rem;
    top: -2.3rem;
  }
}
