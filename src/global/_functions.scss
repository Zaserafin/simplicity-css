@use "sass:color";

// ====================================================
// Function: convert-to-rgb
// Description: Converts a color value to its red, green, and blue (RGB) components.
// Parameters:
//   - $value: The color to be converted (supports hex, rgb, or named colors).
// Returns: A comma-separated list of the red, green, and blue values of the color in that order.
// ====================================================
@function convert-to-rgb($value) {
  @return color.channel($value, "red", $space: rgb), color.channel($value, "green", $space: rgb),
    color.channel($value, "blue", $space: rgb);
  // @return red($value), green($value), blue($value);
}

// ====================================================
// Function: generate-css-variable-name
// Description: Generates the name of a CSS variable with an optional prefix.
// Parameters:
//   - $name: The name of the CSS variable to generate.
//   - $prefix (optional): The prefix for the CSS variable. Defaults to the global $css-var-prefix.
// Returns: A string representing the CSS variable name in the format --[prefix]-[name].
// ====================================================
@function generate-css-variable-name($name, $prefix: $css-var-prefix) {
  @return --#{$prefix}-#{$name};
}

// ====================================================
// Function: use-css-variable
// Description: Generates a var() usage string for a CSS variable with an optional prefix.
// Parameters:
//   - $name: The name of the CSS variable to use.
//   - $prefix (optional): The prefix for the CSS variable. Defaults to the global $css-var-prefix.
// Returns: A string representing the var() function with the CSS variable in use.
// ====================================================
@function use-css-variable($name, $prefix: $css-var-prefix) {
  @return var(#{generate-css-variable-name($name, $prefix)});
}
